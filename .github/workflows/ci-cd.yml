name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker-compose build

    - name: Start services
      run: docker-compose up -d

    - name: Run tests
      run: docker-compose exec -T app mvn test

    - name: Push Docker image
      if: success()
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker-compose push

  create-ec2:
    runs-on: ubuntu-latest
    
    steps:

      # - name: Use SSH key
      #   uses: webfactory/ssh-agent@v0.5.3
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_AWS_KEY }}

      - name: Create EC2 instance
        id: create-ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
                        --image-id ami-0440d3b780d96b29d \
                        --count 1 \
                        --instance-type t2.micro \
                        --key-name project_key \
                        --security-group-ids sg-0d81839558ebc767f \
                        --query 'Instances[0].InstanceId' \
                        --output text)
          PUBLIC_IP=$(aws ec2 describe-instances \
                      --instance-ids $INSTANCE_ID \
                      --query 'Reservations[0].Instances[0].PublicIpAddress' \
                      --output text)
        
      - name: Wait for EC2 instance to start
        run: sleep 60  # Pour que l'instance démarre complètement

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: create-ec2

  #   steps:

  #     - name: Transfer docker-compose.yml to EC2 instance
  #       run: scp -i ssh-private-key docker-compose.yml ec2-user@${{ needs.create-ec2.outputs.public-ip }}:~/docker-compose.yml
  #     - name: SSH into EC2 instance and deploy Docker services
  #       run: |
  #         ssh -i ssh-private-key ec2-user@${{ needs.create-ec2.outputs.public-ip }} "docker-compose pull && docker-compose up -d"

  