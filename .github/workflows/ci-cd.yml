name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker-compose build

    - name: Start services
      run: docker-compose up -d

    - name: Run tests
      run: docker-compose exec -T app mvn test

    - name: Push Docker image
      if: success()
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker-compose push

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        aws-session-token: ${{ secrets.AWS_SECRET_TOKEN }}

    - name: SSH into EC2 Instance
      uses: appleboy/ssh-action@master
      with:
        host: ec2-35-172-181-182.compute-1.amazonaws.com
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_AWS_KEY }}
        port: 22
        script: |
          sudo yum update -y
          # sudo yum install -y yum-utils device-mapper-persistent-data lvm2
          # sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
          # sudo yum install docker-ce docker-ce-cli containerd.io
          sudo yum install docker
          sudo service docker start
          sudo usermod -aG docker $USER
          exit

    - name: Pull and run image docker
      uses: appleboy/ssh-action@master
      with:
        host: ec2-35-172-181-182.compute-1.amazonaws.com
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_AWS_KEY }}
        port: 22
        script: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          export DOCKER_USERNAME=apolline
          wget https://raw.githubusercontent.com/apollineguerineau/genie_logiciel/main/docker-compose.yml
          docker-compose pull
          docker-compose up


  # create-ec2:
  #   build:
  #     runs-on: ubuntu-latest
      
  #     steps: 
        
  #       - name: copy file via ssh password
  #         uses: appleboy/scp-action@v0.1.7
  #         with:
  #           host: ${{ secrets.HOST }}
  #           username: ${{ secrets.USERNAME }}
  #           key: ${{ secrets.SSH_PRIVATE_AWS_KEY }}
  #           port: ${{ secrets.PORT }}
  #           source: "/home/ensai/Documents/3A/genie_logiciel/docker-compose.yml"
  #           target: "/home"

  #       - name: Docker pull and run from hub
  #         uses: appleboy/ssh-action@master
  #         with:
  #           host: ${{ secrets.HOST }}
  #           username: ${{ secrets.USERNAME }}
  #           key: ${{ secrets.SSH_PRIVATE_AWS_KEY }}
  #           envs: GITHUB_SHA
  #           script: |


        # - name: Use SSH key
        #   uses: webfactory/ssh-agent@v0.5.3
        #   with:
        #     ssh-private-key: ${{ secrets.SSH_PRIVATE_AWS_KEY }}

        # - name: SSH into EC2 instance and deploy Docker services
        #   run: |
        #     ssh -i ${{ secrets.SSH_PRIVATE_AWS_KEY }} ec2-user@ec2-34-207-148-62.compute-1.amazonaws.com


      # - name: Use SSH key
      #   uses: webfactory/ssh-agent@v0.5.3
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_AWS_KEY }}

      # - name: Run AWS commands
      #   run: |
      #   INSTANCE_ID=$(aws ec2 run-instances \
      #                 --image-id ami-0440d3b780d96b29d \
      #                 --count 1 \
      #                 --instance-type t2.micro \
      #                 --key-name project_key \
      #                 --security-group-ids sg-0d81839558ebc767f \
      #                 --query 'Instances[0].InstanceId' \
      #                 --output text)
      #   PUBLIC_IP=$(aws ec2 describe-instances \
      #               --instance-ids $INSTANCE_ID \
      #               --query 'Reservations[0].Instances[0].PublicIpAddress' \
      #               --output text)

        
      # - name: Wait for EC2 instance to start
      #   run: sleep 60  # Pour que l'instance démarre complètement

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: create-ec2

  #   steps:

      # - name: Transfer docker-compose.yml to EC2 instance
      #   run: scp -i /home/ensai/Documents/key_project docker-compose.yml ec2-user@ec2-34-207-148-62.compute-1.amazonaws.com:~/docker-compose.yml
      # - name: Install SSH client
      #   run: sudo apt-get install -y openssh-client

  